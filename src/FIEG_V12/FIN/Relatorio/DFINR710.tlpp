#Include "Protheus.ch"

Static lFWCodFil := FindFunction("FWCodFil")

/*/================================================================================================================================/*/
/*/{Protheus.doc} DFinR710
Relatório de Borderos Ordenado.

@type function
@author Wagner Soares
@since 16/07/2014
@version P12.1.23

@obs Desenvolvimento FIEG

@history 28/03/2019, elton.alves@TOTVS.com.br, Compatibilização para o Protheus 12.1.23.

@return Indefinido, Retorno da Função.

/*/
/*/================================================================================================================================/*/

User Function DFinR710()

	Local oReport
	Local aAreaR4	:= GetArea()
	Local uRet := Nil

	//--< Log das Personalizações >-----------------------------
	U_LogCustom()

	//--< Processamento da Rotina >-----------------------------

	// Atualiza dicionario de perguntas
	AjustaSX1()

	If FindFunction("TRepInUse") .And. TRepInUse()
		oReport := ReportDef()
		oReport:PrintDialog()
	Else
		uRet := FinR710R3() // Executa versão anterior do fonte
	Endif

	RestArea(aAreaR4)

Return uRet

/*/================================================================================================================================/*/
/*/{Protheus.doc} ReportDef
Definicao do objeto do relatorio personalizavel e das secoes que serao utilizadas.

@type function
@author Marcio Menon
@since 27/07/2006
@version P12.1.23

@obs Desenvolvimento FIEG

@history 28/03/2019, elton.alves@TOTVS.com.br, Compatibilização para o Protheus 12.1.23.

@return Objeto, Objeto que representa o relatório.

/*/
/*/================================================================================================================================/*/

Static Function ReportDef()

	Local oReport
	Local oSection1
	Local oSection2
	Local aOrdem := {}
	Local cReport 	:= "DFINR710" 				                                          // Nome do relatorio
	Local cDescri 	:= "Este programa tem a função de emitir os borderos de pagamen-tos." //"Este programa tem a fun‡„o de emitir os borderos de pagamen-" ### "tos."
	Local cTitulo 	:= "Emissão de Borderos de Pagamentos"                                //"Emiss„o de Borderos de Pagamentos"
	Local cPerg		:= "FIN710"					                                          // Nome do grupo de perguntas

	//--< Log das Personalizações >-----------------------------
	U_LogCustom()

	//--< Processamento da Rotina >-----------------------------

	//+--------------------------------------------------------------+
	//| Verifica as perguntas selecionadas 		   				     |
	//+--------------------------------------------------------------+
	pergunte("FIN710",.F.)

	//+-------------------------------------------------------------+
	//| Vari veis utilizadas para parametros						|
	//| mv_par01				// Do Bordero						|
	//| mv_par02				// At‚ o Bordero					|
	//| mv_par03				// Data para d‚bito					|
	//| mv_par04				// Qual Moeda						|
	//| mv_par05				// Outras Moedas					|
	//| mv_par06				// Converte por						|
	//| mv_par07				// Compoen saldo por				|
	//| mv_par08				// Considera Filial					|
	//| mv_par09				// Da Filial						|
	//| mv_par10				// Ate Filia						|
	//+-------------------------------------------------------------+

	Aadd( aOrdem, "Por Razao Social" )
	Aadd( aOrdem, "Por Bordero" )


	//+-------------------------------------------------------------+
	//| Inicia a data para debito com a data base do sistema		|
	//+-------------------------------------------------------------+
	dbSelectArea("SX1")

	If SX1->(dbSeek (Padr( "FIN710" , Len( X1_GRUPO ) , ' ' )+"03"))  // Busca a pergunta para mv_par03
		Reclock("SX1",.F.)
		Replace X1_CNT01 With "'"+dtoc(dDataBase)+"'"
		SX1->(MsUnlock())
	Endif

	//+------------------------------------------------------------------------+
	//|Criacao do componente de impressao                                      |
	//|                                                                        |
	//|TReport():New                                                           |
	//|ExpC1 : Nome do relatorio                                               |
	//|ExpC2 : Titulo                                                          |
	//|ExpC3 : Pergunte                                                        |
	//|ExpB4 : Bloco de codigo que sera executado na confirmacao da impressao  |
	//|ExpC5 : Descricao                                                       |
	//+------------------------------------------------------------------------+
	oReport := TReport():New(cReport, cTitulo, cPerg, {|oReport| ReportPrint(oReport)}, cDescri)

	oReport:HideHeader()	//Oculta o cabecalho do relatorio
	oReport:SetPortrait()	//Imprime o relatorio no formato retrato
	oReport:HideFooter()	//Oculta o rodape do relatorio

	//+------------------------------------------------------------------------+                              ADMIN



	//|                      Definicao das Secoes                              |
	//+------------------------------------------------------------------------+
	//+------------------------------------------------------------------------+
	//| Secao 01                                                               |
	//+------------------------------------------------------------------------+
	oSection1 := TRSection():New(oReport, "CABECALHO" , {"SEA"},aOrdem)	//"CABECALHO"

	TRCell():New(oSection1, "CABEC", "", "CABECALHO" , "", 80,/*lPixel*/,/*CodeBlock*/)		//"CABECALHO"
	oSection1:SetHeaderSection(.F.)	//Nao imprime o cabecalho da secao
	oSection1:SetPageBreak(.T.)		//Salta a pagina na quebra da secao

	//+------------------------------------------------------------------------+
	//| Secao 02                                                               |
	//+------------------------------------------------------------------------+
	oSection2 := TRSection():New(oSection1, "BORDERO" , {"SEA","SA6","SEF","SA2","SE2"})		//"BORDERO"
	TRCell():New(oSection2, "EA_PREFIXO", "SEA", "PREF"                    , PesqPict("SEA","EA_PREFIXO"), TamSX3("EA_PREFIXO")[1]  ,/*lPixel*/,/*CodeBlock*/)	//"PRF"
	TRCell():New(oSection2, "EA_NUM"    , "SEA", "NUMERO"                  , PesqPict("SEA","EA_NUM")    , TamSX3("EA_NUM")[1]      ,/*lPixel*/,/*CodeBlock*/)	//"NUMERO"
	TRCell():New(oSection2, "EA_PARCELA", "SEA", "PC"                      , PesqPict("SEA","EA_PARCELA"), TamSX3("EA_PARCELA")[1]  ,/*lPixel*/,/*CodeBlock*/)	//"PC"
	TRCell():New(oSection2, "BENEF"     , ""   , "B E N E F I C I A R I O" , PesqPict("SA2","A2_NOME")   , 33						,/*lPixel*/,/*CodeBlock*/)	//"B E N E F I C I A R I O"
	TRCell():New(oSection2, "A6_NREDUZ" , "SA6", "BANCO"                   , PesqPict("SA6","A6_NREDUZ") , 15						,/*lPixel*/,/*CodeBlock*/)	//"BANCO"
	TRCell():New(oSection2, "EF_NUM"    , "SEF", "HISTORICO"               , PesqPict("SEF","EF_NUM")    , TamSX3("EF_NUM")[1]      ,/*lPixel*/,/*CodeBlock*/)	//"HISTORICO"
	TRCell():New(oSection2, "A2_BANCO"  , "SA2", "BCO"                     , PesqPict("SA2","A2_BANCO")  , TamSX3("A2_BANCO")[1]    ,/*lPixel*/,/*CodeBlock*/)	//"BCO"
	TRCell():New(oSection2, "A2_AGENCIA", "SA2", "AGENC"                   , PesqPict("SA2","A2_AGENCIA"), TamSX3("A2_AGENCIA")[1]  ,/*lPixel*/,/*CodeBlock*/)	//"AGENC"
	TRCell():New(oSection2, "A6_DVAGE"  , "SA6", "DV"                      , PesqPict("SA6","A6_DVAGE")  , TamSX3("A6_DVAGE")[1]	,/*lPixel*/,/*CodeBlock*/)
	TRCell():New(oSection2, "A2_NUMCON" , "SA2", "NUMERO CONTA"            , PesqPict("SA2","A2_NUMCON") , TamSX3("A2_NUMCON")[1]   ,/*lPixel*/,/*CodeBlock*/)	//"NUMERO CONTA"
	TRCell():New(oSection2, "A6_DVCTA"  , "SA6", "DV"                      , PesqPict("SA6","A6_DVCTA")  , TamSX3("A6_DVCTA")[1]    ,/*lPixel*/,/*CodeBlock*/)
	TRCell():New(oSection2, "A2_CGC"  	, "SA2", "CNPJ"                    , "@R 99999999/9999999"       , 20                       ,/*lPixel*/,/*CodeBlock*/) 	//"CNPJ/CPF"
	TRCell():New(oSection2, "E2_VENCREA", "SE2", "DT.VENC"                 , PesqPict("SE2","E2_VENCREA"), 11                       ,/*lPixel*/,/*CodeBlock*/)  //"DT.VENC"
	TRCell():New(oSection2, "VALORPAGAR", ""   , "VALOR PAGAR"             , TM(0,17)                    , 18                       ,/*lPixel*/,/*CodeBlock*/)										    //"VALOR A PAGAR"

	oSection2:Cell("A6_DVAGE"):SetCanPrint( { || !Empty( SA2->A2_AGENCIA ) } )
	oSection2:Cell("A6_DVCTA"):SetCanPrint( { || !Empty( SA2->A2_NUMCON  ) } )

	oSection2:Cell("VALORPAGAR"):cTitle := PadL(oSection2:Cell("VALORPAGAR"):cTitle,oSection2:Cell("VALORPAGAR"):nSize)

	oSection2:SetTotalInLine (.F.) 	//O totalizador da secao sera impresso em coluna
	oSection2:SetHeaderBreak(.T.)   //Imprime o cabecalho das celulas apos a quebra

Return oReport

/*/================================================================================================================================/*/
/*/{Protheus.doc} ReportPrint
Imprime o objeto oReport definido na funcao ReportDef.

@type function
@author Marcio Menon
@since 27/07/2006
@version P12.1.23

@param oReport, Objeto, Objeto TReport do relatorio.

@obs Desenvolvimento FIEG

@history 28/03/2019, elton.alves@TOTVS.com.br, Compatibilização para o Protheus 12.1.23.

/*/
/*/================================================================================================================================/*/

Static Function ReportPrint(oReport)

	Local oSection1 	:= oReport:Section(1)
	Local oSection2 	:= oReport:Section(1):Section(1)
	Local nOrdem        := oReport:Section(1):GetOrder()
	Local oBreak1
	Local oFunction1
	Local cChave      	:= ""
	Local cFiltro     	:= ""
	Local cAliasSea		:= "SEA"
	Local cJoin 		:= ""
	Local lBaixa		:= .F.
	Local lCheque     	:= .F.
	Local lAbatimento 	:= .F.
	Local cLoja  		:= ""
	Local nVlrPagar		:= 0
	Local cModelo   	:= CriaVar("EA_MODELO")
	Local cNumConta		:= CriaVar("EA_NUMCON")
	Local lSeaEof     	:= .F.
	Local cDvCta		:= ""
	Local cFilialSEA
	Local nLen := 0

	//--< Log das Personalizações >-----------------------------
	U_LogCustom()

	//--< Processamento da Rotina >-----------------------------

	Private nJuros := 0
	Private dBaixa := CriaVar("E2_BAIXA")

	SEA->(DbGoTop())
	SE2->(DbGoTop())

	If nOrdem ==1
		cChave := "A2_NOME+A2_COD+A2_LOJA"
	ELSE
		cChave := SEA->(IndexKey())
	Endif


	#IFDEF TOP

	cAliasSea 		:= GetNextAlias()

	cChave 	:= "%"+SqlOrder(cChave)+"%"

	oSection1:BeginQuery()

	If MV_PAR08 == 1 //Considera Filial?
		If lFWCodFil .And. (MsModoFil("SEA")[3]=="E".Or.MsModoFil("SEA")[2]=="E".Or.MsModoFil("SEA")[1]=="E")
			If MsModoFil("SEA")[3] == "E"
				nLen := Len(FwCompany(MV_PAR09))
			EndIf
			If MsModoFil("SEA")[2] == "E"
				nLen += Len(FwUnitBusiness(MV_PAR10))
			EndIf
			If MsModoFil("SEA")[1] == "E"
				nLen += Len(FwFilial(MV_PAR10))
			EndIf
			cFilialSEA := "EA_FILIAL BETWEEN '" + SubStr(MV_PAR09,1,nLen) + "' AND '" + SubStr(MV_PAR10,1,nLen) + "' "
		Else
			cFilialSEA := "EA_FILIAL = '" + xFilial("SEA") + "' "
		EndIf
	Else
		cFilialSEA := "EA_FILIAL = '" + xFilial("SEA") + "' "
	EndIf

	cFilialSEA := "%"+cFilialSEA+"%"

	BeginSql Alias cAliasSea
		SELECT 	SEA.EA_FILIAL, SEA.EA_FILORIG, SEA.EA_NUMBOR, SEA.EA_CART, SEA.EA_PREFIXO, SEA.EA_NUM,
		SEA.EA_PARCELA, SEA.EA_TIPO, SEA.EA_FORNECE, SEA.EA_LOJA, SEA.EA_MODELO ,
		SEA.EA_PORTADO, SEA.EA_AGEDEP,SEA.EA_NUMCON, SEA.EA_DATABOR
		FROM
		%table:SEA% SEA
		INNER JOIN 	%table:SA2% SA2 ON A2_COD=EA_FORNECE and A2_LOJA=EA_LOJA
		WHERE
		%Exp:cFilialSEA% AND
		SEA.EA_NUMBOR >= %Exp:mv_par01% AND
		SEA.EA_NUMBOR <= %Exp:mv_par02% AND
		SEA.EA_CART = 'P' AND
		SEA.%notDel%



		ORDER BY %Exp:cChave%
	EndSql
	oSection1:EndQuery()
	oSection2:SetParentQuery()

	#ELSE

	If MV_PAR08 == 1 //Considera Filial?
		cFiltro := "EA_FILIAL >= '" + MV_PAR09 + "' .AND. EA_FILIAL <= '" + MV_PAR10+ "' .AND."
	Else
		cFiltro := "EA_FILIAL == '" + xFilial("SEA") + "' .And. "
	EndIf

	cFiltro += "EA_NUMBOR >= '" + mv_par01 + "' .And. "
	cFiltro += "EA_NUMBOR <= '" + mv_par02 + "' .And. "
	cFiltro += "EA_CART = 'P'"

	TRPosition():New(oSection2,"SE2",1,{|| If( Empty((cAliasSea)->EA_FILORIG) .AND. !Empty(xFilial("SE2")),;
	xFilial("SE2")+(cAliasSea)->EA_PREFIXO+(cAliasSea)->EA_NUM+(cAliasSea)->EA_PARCELA+(cAliasSea)->EA_TIPO+(cAliasSea)->EA_FORNECE+AllTrim((cAliasSea)->EA_LOJA),;
	(cAliasSea)->EA_FILORIG+(cAliasSea)->EA_PREFIXO+(cAliasSea)->EA_NUM+(cAliasSea)->EA_PARCELA+(cAliasSea)->EA_TIPO+(cAliasSea)->EA_FORNECE+AllTrim((cAliasSea)->EA_LOJA)) } )
	oSection1:SetFilter(cFiltro,cChave)

	#ENDIF

	oSection1:SetLineCondition( { ||	 U_DFR710Chk(1,cAliasSea) } )
	oSection2:SetLineCondition( { ||	 U_DFR710CHK(2,cAliasSea) } )


	TRPosition():New(oSection2,"SE2",1,{|| If( Empty((cAliasSea)->EA_FILORIG) .AND. !Empty(xFilial("SE2")),;
	xFilial("SE2")+(cAliasSea)->EA_PREFIXO+(cAliasSea)->EA_NUM+(cAliasSea)->EA_PARCELA+(cAliasSea)->EA_TIPO+(cAliasSea)->EA_FORNECE+AllTrim((cAliasSea)->EA_LOJA),;
	(cAliasSea)->EA_FILORIG+(cAliasSea)->EA_PREFIXO+(cAliasSea)->EA_NUM+(cAliasSea)->EA_PARCELA+(cAliasSea)->EA_TIPO+(cAliasSea)->EA_FORNECE+AllTrim((cAliasSea)->EA_LOJA)) } )

	oSection2:OnPrintLine( { || lBaixa := Fr710BxVL(cAliasSea, IIf (Empty((cAliasSea)->EA_LOJA), "", (cAliasSea)->EA_LOJA)), If(!lBaixa, lBaixa := Fr710BxBA(cAliasSea), Nil ),;
	lCheque := (!Empty(SE5->E5_NUMCHEQ) .And. SEF->(MsSeek(xFilial("SEF")+SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA+SE5->E5_NUMCHEQ))),;
	Fr710Config(cAliasSea, oSection2), .T. } )

	oReport:OnPageBreak( { || ReportCabec(oReport, cModelo := (cAliasSea)->EA_MODELO, cAliasSea, lBaixa, lSeaEof) } )

	oSection2:Cell("BENEF"):SetBlock( { || cDvCta := Posicione( "SA6", 1, xFilial("SA6") + (cAliasSEA)->(EA_PORTADO+EA_AGEDEP+EA_NUMCON), "A6_DVCTA" ), ;
	cNumConta := RTrim( (cAliasSea)->EA_NUMCON ) + Iif( !Empty(cDvCta),"-","" ) + cDvCta, ;
	Fr710Benef(cAliasSea, lBaixa, lCheque, lAbatimento) } )

	oSection2:Cell("A2_CGC"    ):SetBlock( { || Transform(SA2->A2_CGC, IIF(Len(Alltrim(SA2->A2_CGC))>11,"@R 99999999/9999-99","@R 999999999-99")) } )
	oSection2:Cell("E2_VENCREA"):SetBlock( { || SE2->E2_VENCREA } )
	oSection2:Cell("VALORPAGAR"):SetBlock( { || Fr710VPagar(cAliasSea, lBaixa, lCheque, lAbatimento) } )

	oBreak1 := TRBreak():New(oSection1, { || (cAliasSea)->EA_NUMBOR }, "BORDERO")

	oFunction1 := TRFunction():New(oSection2:Cell("VALORPAGAR"),,"SUM", oBreak1,,,,.F.,.F.)

	oBreak1:OnPrintTotal( { || ReportTxtAut(oReport, cModelo, cNumConta, oFunction1:GetLastValue()), "" } )

	oSection2:SetParentFilter({|cParam| (cAliasSea)->EA_NUMBOR == cParam },{|| (cAliasSea)->EA_NUMBOR } )

	oSection2:Cell("A6_DVAGE"  ):SetBlock( { || Posicione( "SA6", 1, xFilial("SA6") + SA2->( A2_BANCO + A2_AGENCIA + A2_NUMCON ), "A6_DVAGE" ) } )
	oSection2:Cell("A6_DVCTA"  ):SetBlock( { || Posicione( "SA6", 1, xFilial("SA6") + SA2->( A2_BANCO + A2_AGENCIA + A2_NUMCON ), "A6_DVCTA" ) } )
	oSection2:Cell("A6_NREDUZ"  ):SetBlock( { || Posicione( "SA6", 1, xFilial("SA6") + SA2->( A2_BANCO + A2_AGENCIA + A2_NUMCON ), "A6_NREDUZ" ) } )

	//+--------------------------------------------------------------+
	//| Inicia a impressao.						 								  |
	//+--------------------------------------------------------------+
	oSection1:Print()

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  |Fr710BxVL ºAutor  | Marcio Menon       º Data |  28/07/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     | Verifica se existe movimentação bancaria ou baixas que     º±±
±±º          | movimentam banco.                                          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       | 	                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/



/*/================================================================================================================================/*/
/*/{Protheus.doc} Fr710BxVL
Verifica se existe movimentação bancaria ou baixas que movimentam banco.

@type function
@author Marcio Menon
@since 28/07/2006
@version P12.1.23

@param cAliasSea, Caractere, Alias da tabela SEA.
@param cLoja, Caractere, Código da Loja.
@param lBaixa, Lógico, Indica baixa que possui estorno.

@obs Desenvolvimento FIEG

@history 28/03/2019, elton.alves@TOTVS.com.br, Compatibilização para o Protheus 12.1.23.

@return Lógico, Indica baixa que possui estorno.

/*/
/*/================================================================================================================================/*/

Static Function Fr710BxVL(cAliasSea, cLoja, lBaixa)
	Local sFilial
	Local cChave := ""
	// Tratamento gestão coorporativa
	Local lGestao   := Iif( lFWCodFil, FWSizeFilial() > 2, .F. )	// Indica se usa Gestao Corporativa
	Local cFilFwSE2 := IIF( lGestao .And. FindFunction("FwFilial"), FwFilial("SE2") , xFilial("SE2") )

	//--< Log das Personalizações >-----------------------------
	U_LogCustom()

	//--< Processamento da Rotina >-----------------------------

	// Borderos gerados em versao anterior
	IF Empty((cAliasSea)->EA_FILORIG) .AND. !Empty( cFilFwSE2 )
		cChave := xFilial("SE2")+(cAliasSea)->EA_PREFIXO+(cAliasSea)->EA_NUM+(cAliasSea)->EA_PARCELA+(cAliasSea)->EA_TIPO+(cAliasSea)->EA_FORNECE+cLoja
	Else //Borderos gerados a partir da versao 7.10
		//	cChave := (cAliasSea)->EA_FILORIG+(cAliasSea)->EA_PREFIXO+(cAliasSea)->EA_NUM+(cAliasSea)->EA_PARCELA+(cAliasSea)->EA_TIPO+(cAliasSea)->EA_FORNECE+cLoja
		cChave := xFilial("SE2")+(cAliasSea)->EA_PREFIXO+(cAliasSea)->EA_NUM+(cAliasSea)->EA_PARCELA+(cAliasSea)->EA_TIPO+(cAliasSea)->EA_FORNECE+cLoja
	Endif
	DbSelectArea("SE2")
	SE2->(dbSetOrder(1))
	SE2->(MsSeek(cChave))

	If ( !Empty( xFilial("SE2") ) .and. !Empty( xFilial("SE5") )) .or. (Empty( xFilial("SE2") ) .and. !Empty( xFilial("SE5") ))
		sFilial := SE2->E2_FILIAL
	Else
		sFilial := xFilial("SE5")
	EndIf

	dbSelectArea("SE5")
	SE5->(dbSetOrder(2))
	SE5->(MsSeek(sFilial+"VL"+SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA+SE2->E2_TIPO+DtoS(SE2->E2_BAIXA)+SE2->E2_FORNECE+SE2->E2_LOJA ))

	While SE5->(!Eof()) .and. ;
	SE5->E5_FILIAL		== sFilial	 		.and. ;
	SE5->E5_TIPODOC		== "VL"            	.and. ;
	SE5->E5_PREFIXO		== SE2->E2_PREFIXO 	.and. ;
	SE5->E5_NUMERO		== SE2->E2_NUM 	 	.and. ;
	SE5->E5_PARCELA		== SE2->E2_PARCELA 	.and. ;
	SE5->E5_TIPO		== SE2->E2_TIPO	 	.and. ;
	SE5->E5_DATA		== SE2->E2_BAIXA	.and. ;
	SE5->E5_CLIFOR		== SE2->E2_FORNECE 	.and. ;
	SE5->E5_LOJA		== cLoja

		//+-----------------------------------------------+
		//| S¢ considera baixas que nao possuem estorno   |
		//+-----------------------------------------------+
		If !TemBxCanc(SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA+E5_SEQ))
			If SubStr( SE5->E5_DOCUMEN,1,6 ) == (cAliasSea)->EA_NUMBOR .And. SE5->E5_MOTBX != "PCC"
				lBaixa := .T.
				Exit
			Endif
		EndIf
		SE5->(dbSkip())
	Enddo

Return lBaixa

/*/================================================================================================================================/*/
/*/{Protheus.doc} Fr710BxBA
Verifica se existe baixa automatica ou baixa que nao tenha movimentacao bancaria.

@type function
@author Marcio Menon
@since 28/07/2006
@version P12.1.23

@param cAliasSea, Caractere, Alias da tabela SEA.
@param lBaixa, Lógico, Indica baixa que possui estorno.

@obs Desenvolvimento FIEG

@history 28/03/2019, elton.alves@TOTVS.com.br, Compatibilização para o Protheus 12.1.23.

@return Lógico, Indica baixa que possui estorno.

/*/
/*/================================================================================================================================/*/

Static Function Fr710BxBA(cAliasSea, lBaixa)
	Local sFilial
	Local cChave := ""
	// Tratamento gestão coorporativa
	Local lGestao   := Iif( lFWCodFil, FWSizeFilial() > 2, .F. )	// Indica se usa Gestao Corporativa
	Local cFilFwSE2 := IIF( lGestao .And. FindFunction("FwFilial"), FwFilial("SE2") , xFilial("SE2") )


	//--< Log das Personalizações >-----------------------------
	U_LogCustom()

	//--< Processamento da Rotina >-----------------------------

	// Borderos gerados em versao anterior
	IF Empty((cAliasSea)->EA_FILORIG) .AND. !Empty( cFilFwSE2 )
		cChave := xFilial("SE2")+(cAliasSea)->EA_PREFIXO+(cAliasSea)->EA_NUM+(cAliasSea)->EA_PARCELA+(cAliasSea)->EA_TIPO+(cAliasSea)->EA_FORNECE+(cAliasSea)->EA_LOJA
	Else //Borderos gerados a partir da versao 7.10
		//   cChave := (cAliasSea)->EA_FILORIG+(cAliasSea)->EA_PREFIXO+(cAliasSea)->EA_NUM+(cAliasSea)->EA_PARCELA+(cAliasSea)->EA_TIPO+(cAliasSea)->EA_FORNECE+(cAliasSea)->EA_LOJA
		cChave := xFilial("SE2")+(cAliasSea)->EA_PREFIXO+(cAliasSea)->EA_NUM+(cAliasSea)->EA_PARCELA+(cAliasSea)->EA_TIPO+(cAliasSea)->EA_FORNECE+(cAliasSea)->EA_LOJA
	Endif

	DbSelectArea("SE2")
	SE2->(dbSetOrder(1))
	SE2->(MsSeek(cChave))

	If ( !Empty( xFilial("SE2") ) .and. !Empty( xFilial("SE5") )) .or. (Empty( xFilial("SE2") ) .and. !Empty( xFilial("SE5") ))
		sFilial := SE2->E2_FILIAL
	Else
		sFilial := xFilial("SE5")
	EndIf

	dbSelectArea("SE5")
	SE5->(dbSetOrder(2))

	If (SE5->(MsSeek( sFilial +"BA"+SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA+SE2->E2_TIPO+DtoS(SE2->E2_BAIXA)+SE2->E2_FORNECE+SE2->E2_LOJA)))
		While SE5->(!Eof()) .and. ;
		SE5->E5_FILIAL		== sFilial			.and. ;
		SE5->E5_TIPODOC		== "BA"            	.and. ;
		SE5->E5_PREFIXO		== SE2->E2_PREFIXO 	.and. ;
		SE5->E5_NUMERO		== SE2->E2_NUM 	 	.and. ;
		SE5->E5_PARCELA		== SE2->E2_PARCELA 	.and. ;
		SE5->E5_TIPO		== SE2->E2_TIPO	 	.and. ;
		SE5->E5_DATA		== SE2->E2_BAIXA	.and. ;
		SE5->E5_CLIFOR		== SE2->E2_FORNECE 	.and. ;
		SE5->E5_LOJA		== SE2->E2_LOJA

			//+-----------------------------------------------+
			//| S¢ considera baixas que nao possuem estorno   |
			//+-----------------------------------------------+
			If !TemBxCanc(SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA+E5_SEQ))
				If SubStr( SE5->E5_DOCUMEN,1,6 ) == (cAliasSea)->EA_NUMBOR .And. SE5->E5_MOTBX != "PCC"
					lBaixa := .T.
					Exit
				Endif
			EndIf
			SE5->(dbSkip())
		Enddo
	Endif

Return lBaixa

/*/================================================================================================================================/*/
/*/{Protheus.doc} Fr710Benef
Retorna o campo Beneficiario conforme o modelo do bordero.

@type function
@author Marcio Menon
@since 28/07/2006
@version P12.1.23

@param cAliasSea, Caractere, Alias da tabela SEA.
@param lBaixa, Lógico, Indica baixa que possui estorno.
@param lCheque, logical, Indica se é um cheque.
@param lAbatimento, logical, Indica se tem abatimento.

@obs Desenvolvimento FIEG

@history 28/03/2019, elton.alves@TOTVS.com.br, Compatibilização para o Protheus 12.1.23.

@return Caractere, Conteúdo do Campo Beneficiário conforme o modelo do borderô.

/*/
/*/================================================================================================================================/*/

Static Function Fr710Benef(cAliasSea, lBaixa, lCheque, lAbatimento)

	Local cBenef 	:= ""
	Local cChave	:= ""
	Local lGestao	:= Iif( lFWCodFil, FWSizeFilial() > 2, .F. )	// Indica se usa Gestao Corporativa

	//--< Log das Personalizações >-----------------------------
	U_LogCustom()

	//--< Processamento da Rotina >-----------------------------

	SE2->(dbSetOrder(1))
	SE2->(DbSeek(FwxFilial("SE2",(cAliasSea)->EA_FILORIG)+(cAliasSea)->(EA_PREFIXO+EA_NUM+EA_PARCELA+EA_TIPO+EA_FORNECE+EA_LOJA)))


	// Localiza o fornecedor do titulo que esta no bordero
	// Borderos gerados em versao anterior
	IF Empty((cAliasSea)->EA_FILORIG) .AND. !Empty(IIf(lGestao,FWFilial("SA2"),xFilial("SA2")))
		cChave := xFilial("SA2")+SE2->E2_FORNECE+SE2->E2_LOJA
	Else //Borderos gerados a partir da versao 7.10
		If !Empty((cAliasSea)->EA_FILORIG) .AND. !Empty(Iif(lGestao,FWFilial("SA2"),xFilial("SA2")))
			cChave := (cAliasSea)->EA_FILORIG+SE2->E2_FORNECE+SE2->E2_LOJA
		Else
			cChave := xFilial("SA2")+SE2->E2_FORNECE+SE2->E2_LOJA
		Endif
	Endif

	SA2->(MsSeek(cChave))

	If (cAliasSea)->EA_MODELO $ "CH/02"
		If !lAbatimento
			If lCheque
				cBenef := SEF->EF_BENEF
			ElseIf lBaixa
				cBenef := SE5->E5_BENEF
			Else
				cBenef := SA2->A2_NOME
			Endif
		EndIf
	Else
		cBenef := SA2->A2_NOME
	Endif

Return cBenef

/*/================================================================================================================================/*/
/*/{Protheus.doc} Fr710VPagar
Faz os calculos dos valores a pagar dos titulos.

@type function
@author Marcio Menon
@since 28/07/2006
@version P12.1.23

@param cAliasSea, Caractere, Alias da tabela SEA.
@param lBaixa, Lógico, Indica baixa que possui estorno.
@param lCheque, logical, Indica se é um cheque.
@param lAbatimento, logical, Indica se tem abatimento.

@obs Desenvolvimento FIEG

@history 28/03/2019, elton.alves@TOTVS.com.br, Compatibilização para o Protheus 12.1.23.

@return Numérico, Valores a pagar dos titulos.

/*/
/*/================================================================================================================================/*/

Static Function Fr710VPagar(cAliasSea, lBaixa, lCheque, lAbatimento)
	Local nAbat  	:= 0
	Local nVlrPagar	:= 0
	DEFAULT lBaixa 	:= .F.

	//--< Log das Personalizações >-----------------------------
	U_LogCustom()

	//--< Processamento da Rotina >-----------------------------

	SE2->(dbSetOrder(1))
	SE2->(DbSeek(FwxFilial("SE2",(cAliasSea)->EA_FILORIG)+(cAliasSea)->(EA_PREFIXO+EA_NUM+EA_PARCELA+EA_TIPO+EA_FORNECE+EA_LOJA)))


	If lAbatimento
		nAbat 	:= SE2->E2_SALDO
	Else
		nAbat := SomaAbat(SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,"P",SE2->E2_MOEDA,dDataBase,SE2->E2_FORNECE,SE2->E2_LOJA, SE2->E2_FILIAL)
	EndIf

	//+------------------------------------------------+
	//| Efetua calculo dos juros do titulo posicionado |
	//+------------------------------------------------+
	fa080Juros(1)
	dbSelectArea( "SA2" )
	SA2->(dbSeek( xFilial("SA2")+SE2->(E2_FORNECE+E2_LOJA)))

	/*If lBaixa .And. SA2->A2_TIPO == "F" .And. SA2->A2_CALCIRF == "2"
	If ! lAbatimento
	nVlrPagar := Round(NoRound(xMoeda(SE5->E5_VALOR,SE2->E2_MOEDA,MV_PAR04,Iif(MV_PAR06==1,(cAliasSea)->EA_DATABOR,dDataBase),MsDecimais(1)+1),MsDecimais(1)+1),MsDecimais(1))
	nAbat := 0
	EndIf
	Else*/
	If ! lAbatimento
		If mv_par07 == 1
			nVlrPagar := Round(NoRound(xMoeda(SE2->E2_SALDO-SE2->E2_SDDECRE+SE2->E2_SDACRES-nAbat+nJuros,SE2->E2_MOEDA,MV_PAR04,Iif(MV_PAR06==1,(cAliasSea)->EA_DATABOR,dDataBase),MsDecimais(1)+1,SE2->E2_TXMOEDA ,SM2->M2_MOEDA2),MsDecimais(1)+1),MsDecimais(1))
		Else
			nVlrPagar := Round(NoRound(xMoeda(SE2->E2_VALOR-SE2->E2_SDDECRE+SE2->E2_SDACRES-nAbat+nJuros,SE2->E2_MOEDA,MV_PAR04,Iif(MV_PAR06==1,(cAliasSea)->EA_DATABOR,dDataBase),MsDecimais(1)+1,SE2->E2_TXMOEDA ,SM2->M2_MOEDA2),MsDecimais(1)+1),MsDecimais(1))
		EndIf
	Endif

Return nVlrPagar

/*/================================================================================================================================/*/
/*/{Protheus.doc} ReportCabec
Monta o cabecalho do relatorio.

@type function
@author Marcio Menon
@since 28/07/2006
@version P12.1.23

@param oReport, Objeto, Obejto TReport do reltório.
@param cModelo, Caractere, Modelo do documento.
@param cAliasSea, Caractere, Alias da tabela SEA.
@param lBaixa, Lógico, Indica baixa que possui estorno.
@param lSeaEof, Lógico, Indica se está posicionado no fim da tabela SEA.

@obs Desenvolvimento FIEG

@history 28/03/2019, elton.alves@TOTVS.com.br, Compatibilização para o Protheus 12.1.23.

@return Caractere, Fixo String vazia.

/*/
/*/================================================================================================================================/*/

Static Function ReportCabec(oReport, cModelo, cAliasSea, lBaixa, lSeaEof)

	Local cStartPath	:= GetSrvProfString("Startpath","")
	Local cLogo			:= ""
	Local cTexto 		:= ""
	Local lHlpNoTab 	:= .F.

	//--< Log das Personalizações >-----------------------------
	U_LogCustom()

	//--< Processamento da Rotina >-----------------------------

	//Se a quebra de secao for na impressao do texto da autorizacao
	//Volta o registro para imprimir o cabecalho
	If (cAliasSea)->(EOF())
		lSeaEof := .T.
		(cAliasSea)->(dbSkip(-1))
		cModelo := (cAliasSea)->EA_MODELO
	EndIf

	dbSelectArea( "SA6" )
	SA6->(DbSeek(FwxFilial("SA6",(cAliasSea)->EA_FILORIG)+(cAliasSea)->(EA_PORTADO+EA_AGEDEP+EA_NUMCON)))

	If lBaixa
		SA6->(MsSeek(xFilial("SA6")+SE5->(E5_BANCO+E5_AGENCIA+E5_CONTA)))
	Else
		SA6->(MsSeek(xFilial("SA6")+(cAliasSea)->(EA_PORTADO+EA_AGEDEP+EA_NUMCON)))
	Endif

	//+-----------------------------------------------+
	//| Verifica o modelo do documento.				  |
	//+-----------------------------------------------+
	lHlpNoTab := IIf(Empty(cModelo),.F.,.T.)
	If cModelo $ "CH/02"
		cTexto := Tabela("58",@cModelo,lHlpNoTab)
	Elseif cModelo $ "CT/30"
		cTexto := Tabela("58",@cModelo,lHlpNoTab)
	Elseif cModelo $ "CP/31"
		cTexto := Tabela("58",@cModelo,lHlpNoTab)
	ElseIf cModelo $ "CC/01/03/04/05/10/41/43"
		cTexto := Tabela("58",@cModelo,lHlpNoTab)
	Else
		cTexto := Tabela("58",@cModelo,lHlpNoTab)
	Endif

	//+-----------------------------------------------+
	//| Define o cabecalho.							  |
	//+-----------------------------------------------+
	oReport:ThinLine()

	cLogo := cStartPath + "LGRL" + SM0->M0_CODIGO + IIf( lFWCodFil, FWGETCODFILIAL, SM0->M0_CODFIL ) + ".BMP" 	// Empresa+Filial

	If !File( cLogo )
		cLogo := cStartPath + "LGRL" + SM0->M0_CODIGO + ".BMP" 						// Empresa
	endif

	oReport:SkipLine()
	oReport:SayBitmap (oReport:Row(),005,cLogo,291,057)
	oReport:SkipLine()
	oReport:SkipLine()
	oReport:SkipLine()
	oReport:ThinLine()
	oReport:SkipLine()
	oReport:SkipLine()
	//Texto do tipo de bordero
	oReport:PrintText(SM0->M0_NOME + PadC(OemToAnsi("MODELO"),100) + OemToAnsi("DATA: ")+DtoC(dDataBase))
	oReport:PrintText(Space(Len(SM0->M0_NOME)) + PadC(cTexto,100) + OemToAnsi("BORDERO: ") + (cAliasSea)->EA_NUMBOR)
	oReport:SkipLine()
	oReport:SkipLine()
	//Dados do Banco
	oReport:PrintText(Pad(OemToAnsi("BANCO: ") + SA6->A6_NOME,100))
	oReport:PrintText(Pad(	OemToAnsi("AGENCIA: ") + RTrim(SA6->A6_AGENCIA) + Iif( !Empty(SA6->A6_DVAGE),"-","") + RTrim(SA6->A6_DVAGE) + ;
	OemToAnsi("CONTA: ") + RTrim(SA6->A6_NUMCON)  + Iif( !Empty(SA6->A6_DVCTA),"-","") + RTrim(SA6->A6_DVCTA),100))
	oReport:PrintText(Pad(SA6->A6_END + " "  + SA6->A6_MUN + " " + SA6->A6_EST,100))
	oReport:SkipLine()
	oReport:SkipLine()
	oReport:ThinLine()

	If lSeaEof
		(cAliasSea)->(dbSkip())
	EndIf

Return ""

/*/================================================================================================================================/*/
/*/{Protheus.doc} Fr710Config
Exibe ou oculta as colunas do relatorio, conforme o modelo do bordero.

@type function
@author Marcio Menon
@since 01/08/2006
@version P12.1.23

@param cAliasSea, Caractere, Alias da tabela SEA.
@param oSection2, Objeto, Objeto TSection do relatório.

@obs Desenvolvimento FIEG

@history 28/03/2019, elton.alves@TOTVS.com.br, Compatibilização para o Protheus 12.1.23.

/*/
/*/================================================================================================================================/*/

Static Function Fr710Config(cAliasSea, oSection2)

	//--< Log das Personalizações >-----------------------------
	U_LogCustom()

	//--< Processamento da Rotina >-----------------------------

	Do Case

		Case	(cAliasSea)->EA_MODELO $ "CH/02"
		oSection2:Cell("EF_NUM"    ):Enable()
		oSection2:Cell("EF_NUM"    ):SetBlock({ || "CH. " + SEF->EF_NUM})
		oSection2:Cell("A2_BANCO"  ):Disable()
		oSection2:Cell("A2_AGENCIA"):Disable()
		oSection2:Cell("A6_DVAGE"  ):Disable()
		oSection2:Cell("A2_NUMCON" ):Disable()
		oSection2:Cell("A6_DVCTA"  ):Disable()
		oSection2:Cell("A2_CGC"    ):Disable()

		Case	(cAliasSea)->EA_MODELO $ "CT/30"
		oSection2:Cell("A6_NREDUZ" ):Disable()
		oSection2:Cell("A2_BANCO"  ):Disable()
		oSection2:Cell("A2_AGENCIA"):Disable()
		oSection2:Cell("A6_DVAGE"  ):Disable()
		oSection2:Cell("A2_NUMCON" ):Disable()
		oSection2:Cell("A6_DVCTA"  ):Disable()
		oSection2:Cell("A2_CGC"    ):Disable()
		//Verifica se existe numero de cheque
		If (SEF->(MsSeek(xFilial("SEF") + SE5->E5_BANCO + SE5->E5_AGENCIA + SE5->E5_CONTA + SE5->E5_NUMCHEQ)))
			oSection2:Cell("EF_NUM"    ):SetTitle("NUM. CHEQUE")
			oSection2:Cell("EF_NUM"    ):SetBlock({ || SEF->EF_NUM})
			oSection2:Cell("EF_NUM"    ):Enable()
		Else
			oSection2:Cell("EF_NUM"    ):SetTitle("")
		EndIf

		Case	(cAliasSea)->EA_MODELO $ "CT/31"
		oSection2:Cell("A6_NREDUZ" ):Enable()
		oSection2:Cell("A2_BANCO"  ):Disable()
		oSection2:Cell("A2_AGENCIA"):Disable()
		oSection2:Cell("A6_DVAGE"  ):Disable()
		oSection2:Cell("A2_NUMCON" ):Disable()
		oSection2:Cell("A6_DVCTA"  ):Disable()
		oSection2:Cell("A2_CGC"    ):Disable()
		//Verifica se existe numero de cheque
		If (SEF->(MsSeek(xFilial("SEF") + SE5->E5_BANCO + SE5->E5_AGENCIA + SE5->E5_CONTA + SE5->E5_NUMCHEQ)))
			oSection2:Cell("EF_NUM"    ):SetTitle("NUM. CHEQUE")
			oSection2:Cell("EF_NUM"    ):SetBlock({ || SEF->EF_NUM})
			oSection2:Cell("EF_NUM"    ):Enable()
		Else
			oSection2:Cell("EF_NUM"    ):SetTitle("NUM. CHEQUE")
		EndIf

		Case	(cAliasSea)->EA_MODELO $ "CC/01/03/04/05/10/41/43"
		oSection2:Cell("A6_NREDUZ" ):Enable()
		oSection2:Cell("A2_BANCO"  ):Enable()
		oSection2:Cell("A2_AGENCIA"):Enable()
		oSection2:Cell("A6_DVAGE"  ):Enable()
		oSection2:Cell("A2_NUMCON" ):Enable()
		oSection2:Cell("A6_DVCTA"  ):Enable()
		oSection2:Cell("A2_CGC"    ):Enable()
		oSection2:Cell("EF_NUM"    ):Disable()
	EndCase


Return

/*/================================================================================================================================/*/
/*/{Protheus.doc} ReportTxtAut
Imprime o Total Geral por extenso e as mensagens de autorizacao, conforme o modelo do borderô.

@type function
@author Marcio Menon
@since 01/08/2006
@version P12.1.23

@param oReport, Objeto, Obejto TReport do reltório.
@param cModelo, Caractere, Modelo do documento.
@param cNumConta, Caractere, Número da conta.
@param nVlrSecao, Numérico, Valor da Seção.

@obs Desenvolvimento FIEG

@history 28/03/2019, elton.alves@TOTVS.com.br, Compatibilização para o Protheus 12.1.23.

@return Caractere, Fixo String vazia.

/*/
/*/================================================================================================================================/*/

Static Function ReportTxtAut(oReport, cModelo, cNumConta, nVlrSecao)
	Local nCount

	//--< Log das Personalizações >-----------------------------
	U_LogCustom()

	//--< Processamento da Rotina >-----------------------------

	oReport:SkipLine()
	oReport:PrintText(Extenso(nVlrSecao,.F.,MV_PAR04))
	oReport:SkipLine()

	If cModelo $ "CH/02"
		//"AUTORIZAMOS V.SAS. A EMITIR OS CHEQUES NOMINATIVOS AOS BENEFICIARIOS EM REFERENCIA,"
		oReport:PrintText("AUTORIZAMOS V.SAS. A EMITIR OS CHEQUES NOMINATIVOS AOS BENEFICIARIOS EM REFERENCIA,")
		//"DEBITANDO EM NOSSA CONTA CORRENTE NO DIA "
		oReport:PrintText("DEBITANDO EM NOSSA CONTA CORRENTE NO DIA " + DtoC( mv_par03 ))
		//"PELO VALOR ACIMA TOTALIZADO."
		oReport:PrintText("PELO VALOR ACIMA TOTALIZADO.")

	Elseif cModelo $ "CT/30"
		//"AUTORIZAMOS V.SAS. A PAGAR OS TITULOS ACIMA RELACIONADOS EM NOSSA"
		oReport:PrintText("AUTORIZAMOS V.SAS. A PAGAR OS TITULOS ACIMA RELACIONADOS EM NOSSA")
		//"CONTA MOVIMENTO NO DIA "###", PELO VALOR ACIMA TOTALIZADO."
		oReport:PrintText("CONTA MOVIMENTO NO DIA " + DtoC( mv_par03 ) + OemToAnsi(", PELO VALOR ACIMA TOTALIZADO."))

	Elseif cModelo $ "CP/31"
		//"AUTORIZAMOS V.SAS. A PAGAR OS TITULOS EM REFERENCIA, LEVANDO A DEBITO DE NOSSA"
		oReport:PrintText("AUTORIZAMOS V.SAS. A PAGAR OS TITULOS EM REFERENCIA, LEVANDO A DEBITO DE NOSSA")
		//"CONTA CORRENTE NUM. "###" NO DIA "###" PELO VALOR ACIMA TOTALIZADO."
		oReport:PrintText("CONTA CORRENTE NUM. " + cNumConta + OemToAnsi(" NO DIA ") + DtoC( mv_par03 ) + OemToAnsi(" PELO VALOR ACIMA TOTALIZADO."))

	Elseif cModelo $ "CC/01/03/04/05/10/41/43"
		//"AUTORIZAMOS V.SAS. A EMITIREM ORDEM DE PAGAMENTO, OU DOC PARA OS BANCOS/CONTAS ACIMA."
		oReport:PrintText("AUTORIZAMOS V.SAS. A EMITIREM ORDEM DE PAGAMENTO, OU DOC PARA OS BANCOS/CONTAS ACIMA.")
		//"DOS TITULOS RESPECTIVOS DEBITANDO EM NOSSA C/CORRENTE NUM "
		oReport:PrintText("DOS TITULOS RESPECTIVOS DEBITANDO EM NOSSA C/CORRENTE NUM " + cNumConta)
		//"NO DIA "### " PELO VALOR ACIMA TOTALIZADO."
		oReport:PrintText("NO DIA " + dToC( mv_par03 ) + OemToAnsi(" PELO VALOR ACIMA TOTALIZADO."))

	Else
		//"AUTORIZAMOS V.SAS. A PAGAR OS TITULOS EM REFERENCIA, LEVANDO A DEBITO DE NOSSA"
		oReport:PrintText("AUTORIZAMOS V.SAS. A PAGAR OS TITULOS EM REFERENCIA, LEVANDO A DEBITO DE NOSSA")
		//"CONTA CORRENTE NUM. "###" NO DIA "###" PELO VALOR ACIMA TOTALIZADO."
		oReport:PrintText("CONTA CORRENTE NUM. " + cNumConta + OemToAnsi(" NO DIA ") + DtoC( mv_par03 ) + OemToAnsi(" PELO VALOR ACIMA TOTALIZADO."))
	EndIf

	For nCount := 1 to 5
		oReport:SkipLine()
	Next

	oReport:PrintText("-----------------------------------",/*nRow*/,900)
	oReport:PrintText(SM0->M0_NOMECOM,/*nRow*/,900)

Return ""

/*/================================================================================================================================/*/
/*/{Protheus.doc} DFinR710R3
Bordero de Pagamento.

@type function
@author Wagner Xavier
@since 05/10/1992
@version P12.1.23

@obs Desenvolvimento FIEG

@history 28/03/2019, elton.alves@TOTVS.com.br, Compatibilização para o Protheus 12.1.23.

/*/
/*/================================================================================================================================/*/

User Function DFinR710R3( )
	//+--------------------------------------------------------------+
	//| Define Variaveis 										     |
	//+--------------------------------------------------------------+
	Local wnrel
	Local cDesc1 := "Este programa tem a fun‡„o de emitir os borderos de pagamen-"  //"Este programa tem a fun‡„o de emitir os borderos de pagamen-"
	Local cDesc2 := "tos."                                                          //"tos."
	Local cDesc3 :=""
	Local Tamanho:="M"
	Local cString:="SEA"
	Local lSegue := .T.

	//--< Log das Personalizações >-----------------------------
	U_LogCustom()

	//--< Processamento da Rotina >-----------------------------

	Private titulo	:= "Emissão de Borderos de Pagamentos" //"Emiss„o de Borderos de Pagamentos"
	Private cabec1	:= ""
	Private cabec2	:= ""
	Private aReturn	:= { OemToAnsi("Zebrado"), 1,OemToAnsi("Administracao"), 1, 2, 1, "",1 }  //"Zebrado"###"Administracao"
	Private nomeprog:="FINR710"
	Private aLinha	:= { },nLastKey := 0
	Private cPerg	:="FIN710"

	//+--------------------------------------------------------------+
	//| Verifica as perguntas selecionadas 						     |
	//+--------------------------------------------------------------+
	pergunte("FIN710",.F.)

	//+-------------------------------------------------------------+
	//| Vari veis utilizadas para parametros						|
	//| mv_par01				// Do Bordero						|
	//| mv_par02				// At‚ o Bordero					|
	//| mv_par03				// Data para d‚bito					|
	//| mv_par04				// Qual Moeda						|
	//| mv_par05				// Outras Moedas					|
	//| mv_par06				// Converte por						|
	//+-------------------------------------------------------------+

	//+--------------------------------------------------------------+
	//| Inicia a data para debito com a data base do sistema		 |
	//+--------------------------------------------------------------+
	dbSelectArea("SX1")
	If SX1->(dbSeek (Padr( "FIN710" , Len( X1_GRUPO ) , ' ' )+"03"))  // Busca a pergunta para mv_par03
		Reclock("SX1",.F.)
		Replace X1_CNT01 With "'"+dtoc(dDataBase)+"'"
		SX1->(MsUnlock())
	Endif

	//+--------------------------------------------------------------+
	//| Envia controle para a funcao SETPRINT 						 |
	//+--------------------------------------------------------------+
	wnrel := "FINR710"            //Nome Default do relatorio em Disco
	wnrel := SetPrint(cString,wnrel,cPerg,@titulo,cDesc1,cDesc2,cDesc3,.F.,"",,Tamanho)

	If nLastKey == 27
		lSegue := .F.
	Endif

	If lSegue

		SetDefault(aReturn,cString)

		If lSegue

			If nLastKey == 27
				lSegue := .F.
			Endif

			RptStatus({|lEnd| Fa710Imp(@lEnd,wnRel,cString,Tamanho)},titulo)

		EndIf

	EndIf

Return

/*/================================================================================================================================/*/
/*/{Protheus.doc} FA710Imp
Bordero de Pagamento.

@type function
@author Thiago Rasmussen
@since 05/10/1992
@version P12.1.23

@param lEnd, Lógico, Variável que indica que o botão cancelar foi executado.
@param wnRel, Caractere, Relatório em disco a ser visualizado.
@param cString, Caractere, Compatibilidade.
@param Tamanho, Numérico, Compatibilidade.

@obs Desenvolvimento FIEG

@history 28/03/2019, elton.alves@TOTVS.com.br, Compatibilização para o Protheus 12.1.23.

/*/
/*/================================================================================================================================/*/

Static Function FA710Imp(lEnd,wnRel,cString, Tamanho)

	Local CbCont,CbTxt
	Local cModelo
	Local nTotValor		:= 0
	Local lCheque		:= .f.
	Local lBaixa		:= .f.
	Local nTipo
	Local nColunaTotal
	Local cNumConta		:= CriaVar("EA_NUMCON")
	Local lNew			:= .F.
	Local cNumBor
	Local lAbatimento 	:= .F.
	Local nAbat 		:= 0
	Local lFirst 		:= .T.
	Local cChave
	Local aArea			:= {}
	Local sFilial
	Local cFilOrig
	Local cFilDe
	Local cFilAte
	Local aSM0		:= AdmAbreSM0()
	Local nInc
	Local aFilProc	:= {}
	Local cFilAux

	//--< Log das Personalizações >-----------------------------
	U_LogCustom()

	//--< Processamento da Rotina >-----------------------------

	Private nJuros 		:= 0
	Private dBaixa 		:= CriaVar("E2_BAIXA")

	//+--------------------------------------------------------------+
	//| Vari veis utilizadas para Impress„o do Cabe‡alho e Rodap‚	  |
	//+--------------------------------------------------------------+
	cbtxt 	:= SPACE(10)
	cbcont	:= 0
	li 		:= 80
	m_pag 	:= 1

	nTipo := aReturn[4]
	nContador := 0

	SetRegua(RecCount())
	lNew := .T.

	//+-----------------------------------------------------------+
	//| Atribui valores as variaveis ref a filiais                |
	//+-----------------------------------------------------------+
	If mv_par08 == 2
		cFilDe  := IIf( lFWCodFil, FWGETCODFILIAL, SM0->M0_CODFIL )
		cFilAte := IIf( lFWCodFil, FWGETCODFILIAL, SM0->M0_CODFIL )
	Else
		cFilDe := mv_par09	// Todas as filiais
		cFilAte:= mv_par10
	Endif

	cFilAux := cFilAnt

	For nInc := 1 To Len( aSM0 )

		cFilAnt := aSM0[nInc][2]
		c_Empant:= aSM0[nInc][1]

		If aSM0[nInc][1] == cEmpAnt .AND. (aSM0[nInc][2] >= cFilDe .and. aSM0[nInc][2] <= cFilAte) .and.  AScan( aFilProc, c_Empant+xFilial("SEA") ) == 0


			dbSelectArea("SEA")
			SEA->(dbSetOrder( 1 ))
			SEA->(dbSeek(cFilial+mv_par01,.T.))


			While SEA->(!Eof()) .And. cFilial == EA_FILIAL .And. EA_NUMBOR <= mv_par02

				cNumBor := SEA->EA_NUMBOR

				IF lEnd
					@Prow()+1,001 PSAY OemToAnsi("CANCELADO PELO OPERADOR")  //"CANCELADO PELO OPERADOR"
					Exit
				EndIF

				IncRegua()

				IF Empty(EA_NUMBOR)
					SEA->(dbSkip( ))
					Loop
				Endif

				IF SEA->EA_CART != "P"
					SEA->(dbSkip( ))
					Loop
				Endif

				lCheque := .f.
				lBaixa  := .f.
				cModelo := SEA->EA_MODELO
				dbSelectArea( "SE2" )
				cLoja := Iif ( Empty(SEA->EA_LOJA) , "" , SEA->EA_LOJA )

				SE2->(dbSelectArea( "SA2" ))
				SE2->(DbSeek(FwxFilial("SE2",SEA->EA_FILORIG)+SEA->(EA_PREFIXO+EA_NUM+EA_PARCELA+EA_TIPO+EA_FORNECE+EA_LOJA)))

				// Borderos gerados em versao anterior
				IF Empty(SEA->EA_FILORIG) .AND. !Empty(xFilial("SE2"))
					cChave		:= xFilial("SE2")+SEA->EA_PREFIXO+SEA->EA_NUM+SEA->EA_PARCELA+SEA->EA_TIPO+SEA->EA_FORNECE+cLoja
					cFilOrig	:= xFilial("SE2")
				Else //Borderos gerados a partir da versao 7.10
					cChave 		:= FwxFilial("SE2",SEA->EA_FILORIG)+SEA->(EA_PREFIXO+EA_NUM+EA_PARCELA+EA_TIPO+EA_FORNECE+EA_LOJA)
					//cChave 		:= xFilial("SE2")+SEA->EA_PREFIXO+SEA->EA_NUM+SEA->EA_PARCELA+SEA->EA_TIPO+SEA->EA_FORNECE+cLoja
					cFilOrig	:= SEA->EA_FILORIG
				Endif

				aArea:=GetArea()
				DbSelectArea("SE2")
				SE2->(dbSetOrder( 1 ))
				SE2->(dbSeek(cChave))
				//RestArea(aArea)

				IF MV_PAR05 == 2 .And. SE2->E2_MOEDA <> MV_PAR04
					dbSelectArea("SEA")
					SEA->(dbSkip( ))
					Loop
				Endif

				SEA->(MsSeek( cChave ))
				dbSelectArea( "SE5" )
				SE5->(dbSetOrder( 2 ))
				SE5->(dbSeek( cFilOrig+"VL"+SE2->E2_FILORIG+SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA+SE2->E2_TIPO+DtoS(SE2->E2_BAIXA)+SE2->E2_FORNECE+SE2->E2_LOJA ))

				While SE5->(!Eof() .and. ;
				E5_FILIAL	== cFilOrig			.and. ;
				E5_TIPODOC	== "VL"            	.and. ;
				E5_PREFIXO	== SE2->E2_PREFIXO 	.and. ;
				E5_NUMERO	== SE2->E2_NUM 	 	.and. ;
				E5_PARCELA	== SE2->E2_PARCELA 	.and. ;
				E5_TIPO		== SE2->E2_TIPO	 	.and. ;
				E5_DATA		== SE2->E2_BAIXA	.and. ;
				E5_CLIFOR	== SE2->E2_FORNECE 	.and. ;
				E5_LOJA		== cLoja)
					//+-----------------------------------------------+
					//| S¢ considera baixas que nao possuem estorno   |
					//+-----------------------------------------------+
					If !TemBxCanc(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA+E5_SEQ)
						If SubStr( E5_DOCUMEN,1,6 ) == cNumBor .And. E5_MOTBX != "PCC"
							lBaixa := .t.
							Exit
						Endif
					EndIf
					SE5->(dbSkip( ))
				Enddo
				If !lBaixa
					If ( !Empty( xFilial("SE2") ) .and. !Empty( xFilial("SE5") )) .or. (Empty( xFilial("SE2") ) .and. !Empty( xFilial("SE5") ))
						sFilial := SE2->E2_FILIAL
					Else
						sFilial := xFilial("SE5")
					EndIf
					If SE5->(dbSeek( sFilial+"BA"+SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA+SE2->E2_TIPO+DtoS(SE2->E2_BAIXA)+SE2->E2_FORNECE+SE2->E2_LOJA))
						While SE5->(!Eof() .and. ;
						E5_FILIAL	== sFilial 			.and. ;
						E5_TIPODOC	== "BA"            	.and. ;
						E5_PREFIXO	== SE2->E2_PREFIXO 	.and. ;
						E5_NUMERO	== SE2->E2_NUM 	 	.and. ;
						E5_PARCELA	== SE2->E2_PARCELA 	.and. ;
						E5_TIPO		== SE2->E2_TIPO	 	.and. ;
						E5_DATA		== SE2->E2_BAIXA	.and. ;
						E5_CLIFOR	== SE2->E2_FORNECE 	.and. ;
						E5_LOJA		== SE2->E2_LOJA)

							//+-----------------------------------------------+
							//| S¢ considera baixas que nao possuem estorno   |
							//+-----------------------------------------------+
							If !TemBxCanc(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_CLIFOR+E5_LOJA+E5_SEQ)
								If SubStr( E5_DOCUMEN,1,6 ) == cNumBor .And. E5_MOTBX != "PCC"
									lBaixa := .t.
									Exit
								Endif
							EndIf
							SE5->(dbSkip( ))
						Enddo
					Endif
				Endif
				dbSelectArea( "SEF" )
				If (!Empty(SE5->E5_NUMCHEQ) .And. SEF->(dbSeek( cFilial+SE5->E5_BANCO+SE5->E5_AGENCIA+SE5->E5_CONTA+SE5->E5_NUMCHEQ)))
					lCheque := .t.
				Endif

				// Localiza o fornecedor do titulo que esta no bordero
				SE2->(dbSelectArea( "SA2" ))
				SE2->(DbSeek(FwxFilial("SE2",SEA->EA_FILORIG)+SEA->(EA_PREFIXO+EA_NUM+EA_PARCELA+EA_TIPO+EA_FORNECE+EA_LOJA)))

				// Borderos gerados em versao anterior
				IF Empty(SEA->EA_FILORIG) .AND. !Empty(xFilial("SA2"))
					cChave := xFilial("SA2")+SE2->E2_FORNECE+SE2->E2_LOJA
				Else //Borderos gerados a partir da versao 7.10
					If !Empty(SEA->EA_FILORIG) .AND. !Empty(xFilial("SA2"))
						cChave := FwxFilial("SA2")+SE2->E2_FORNECE+SE2->E2_LOJA
					Else
						cChave := xFilial("SA2")+SE2->E2_FORNECE+SE2->E2_LOJA
					Endif
				Endif
				SE2->(MsSeek( cChave ))

				dbSelectArea( "SEA" )

				IF li > 55 .Or. lNew
					fr710Cabec( SEA->EA_MODELO, nTipo, Tamanho, @lFirst)
					m_pag++
					lNew := .F.
				Endif

				lAbatimento := SEA->EA_TIPO $ MV_CPNEG .or. SEA->EA_TIPO $ MVABATIM
				If lAbatimento
					nAbat 	:= SE2->E2_SALDO
				Else
					nAbat := SomaAbat(SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,"P",SE2->E2_MOEDA,dDataBase,SE2->E2_FORNECE,SE2->E2_LOJA, SE2->E2_FILIAL)
				EndIf

				If ! lAbatimento
					li++
					@li, 0 PSAY SEA->EA_PREFIXO
					@li, 4 PSAY SEA->EA_NUM
					@li,17 PSAY SEA->EA_PARCELA
				EndIf

				SA6->( dbSetOrder( 1 ) )
				SA6->( dbSeek( xFilial("SA6")+SEA->(EA_PORTADO+EA_AGEDEP+EA_NUMCON)) )

				cNumConta := RTrim(SEA->EA_NUMCON) + Iif( !Empty(SA6->A6_DVCTA), "-", "" ) + SA6->A6_DVCTA


				//+------------------------------------------------+
				//| Efetua calculo dos juros do titulo posicionado |
				//+------------------------------------------------+
				fa080Juros(1)

				dbSelectArea( "SA2" )
				SA2->(dbSeek( xFilial("SA2")+SEA->(EA_FORNECE+EA_LOJA)))

				If SEA->EA_MODELO $ "CH/02"
					dbSelectArea( "SEA" )
					If ! lAbatimento
						If lCheque
							@li,20 PSAY SubStr(SEF->EF_BENEF,1, 33)
						Elseif lBaixa
							@li,20 PSAY SubStr(SE5->E5_BENEF,1, 33)
						Else
							@li,20 PSAY SubStr(SA2->A2_NOME,1, 33)
						Endif
					EndIf

					dbSelectArea( "SA6" )
					SA6->(DbSeek(FwxFilial("SA6",SEA->EA_FILORIG)+SEA->(EA_PORTADO+EA_AGEDEP+EA_NUMCON)))

					If lBaixa
						SA6->(dbSeek( xFilial("SA6")+SE5->(E5_BANCO+E5_AGENCIA+E5_CONTA)))
					Else
						SA6->(dbSeek( xFilial("SA6")+SEA->(EA_PORTADO+EA_AGEDEP+EA_NUMCON)))
					Endif
					dbSelectArea( "SEA" )
					If ! lAbatimento
						@li,55 PSAY Left(SA6->A6_NREDUZ,15)
						@li,71 PSAY SE2->E2_VENCREA
						If lCheque
							@li,82 PSAY "CH. " + SEF->EF_NUM
						Endif
					EndIf
					nColunaTotal := 102
				Elseif SEA->EA_MODELO $ "CT/30"
					If ! lAbatimento
						@li,20 PSAY SubStr(SA2->A2_NOME,1, 33)
						@li,55 PSAY SE2->E2_VENCREA
						If lCheque
							@li,78 PSAY SEF->EF_NUM
						Endif
					EndIf
					nColunaTotal := 94
				Elseif SEA->EA_MODELO $ "CP/31"
					If ! lAbatimento
						@li,20 PSAY SubStr(SA2->A2_NOME,1, 33)
					EndIf
					dbSelectArea( "SA6" )
					SA6->(dbSeek( xFilial("SA6")+SEA->(EA_PORTADO+EA_AGEDEP+EA_NUMCON)))
					dbSelectArea( "SEA" )
					If ! lAbatimento
						@li,55 PSAY Left(SA6->A6_NREDUZ,15)
						@li,71 PSAY SE2->E2_VENCREA
						@li,83 PSAY SE2->E2_NUMBCO
					EndIf
					nColunaTotal := 99
				Elseif SEA->EA_MODELO $ "CC/01/03/04/05/10/41/43"
					dbSelectArea( "SA6" )
					If SEA->(EA_PORTADO+EA_AGEDEP+EA_NUMCON) <> SA2->(A2_BANCO+A2_AGENCIA+A2_NUMCON) .And. !Empty(SA2->(A2_BANCO+A2_AGENCIA+A2_NUMCON))
						SA6->(dbSeek( xFilial("SA6")+SA2->(A2_BANCO+A2_AGENCIA+A2_NUMCON)))
					Else
						SA6->(dbSeek( xFilial("SA6")+SEA->(EA_PORTADO+EA_AGEDEP+EA_NUMCON)))
					EndIf
					If ! lAbatimento
						@li,20  PSAY Left(SA6->A6_NREDUZ,15)
						@li,36  PSAY 	SA2->A2_BANCO + " " + ;
						RTrim(SA2->A2_AGENCIA) + Iif( !Empty(SA2->A2_AGENCIA), Iif( !Empty(SA6->A6_DVAGE), "-", "") + SA6->A6_DVAGE, "" ) + " " + ;
						RTrim(SA2->A2_NUMCON)  + Iif( !Empty(SA2->A2_NUMCON) , Iif( !Empty(SA6->A6_DVCTA), "-", "") + SA6->A6_DVCTA, "" )
						@li,60  PSAY SubStr(SA2->A2_NOME, 1, 25 )
						@li,86  PSAY SA2->A2_CGC Picture IIF(Len(Alltrim(SA2->A2_CGC))>11,"@R 99999999/9999-99","@R 999999999-99")
						@li,104 PSAY SE2->E2_VENCREA
					EndIf
					nColunaTotal := 115
				Else
					If ! lAbatimento
						@li,20 PSAY SubStr(SA2->A2_NOME,1, 33)
					EndIf
					dbSelectArea( "SA6" )
					SA6->(dbSeek( xFilial("SA6")+SEA->(EA_PORTADO+EA_AGEDEP+EA_NUMCON)))
					dbSelectArea( "SEA" )
					If ! lAbatimento
						@li,55 PSAY Left(SA6->A6_NREDUZ,15)
						@li,71 PSAY SE2->E2_VENCREA
						@li,84 PSAY SE2->E2_NUMBCO
					EndIf
					nColunaTotal := 100
				Endif

				dbSelectArea( "SA2" )
				SA2->(dbSeek( xFilial("SA2")+SE2->(E2_FORNECE+E2_LOJA)))

				/*If lBaixa .And. SA2->A2_TIPO == "F" .And. SA2->A2_CALCIRF == "2"
				If ! lAbatimento
				@li,nColunaTotal PSAY Round(NoRound(xmoeda(SE5->E5_VALOR,SE2->E2_MOEDA,MV_PAR04,Iif(MV_PAR06==1,SEA->EA_DATABOR,dDataBase),MsDecimais(1)+1),MsDecimais(1)+1),MsDecimais(1)) Picture "@E 999,999,999.99"
				EndIf
				nTotValor += xMoeda(SE5->E5_VALOR,SE2->E2_MOEDA,MV_PAR04,Iif(MV_PAR06==1,SEA->EA_DATABOR,dDataBase))
				nAbat := 0
				Else*/
				If ! lAbatimento
					If mv_par07 == 1
						@li,nColunaTotal PSAY Round(NoRound(xMoeda(SE2->E2_SALDO-SE2->E2_SDDECRE+SE2->E2_SDACRES-nAbat+nJuros,SE2->E2_MOEDA,MV_PAR04,Iif(MV_PAR06==1,SEA->EA_DATABOR,dDataBase),MsDecimais(1)+1,SE2->E2_TXMOEDA ,SM2->M2_MOEDA2),MsDecimais(1)+1),MsDecimais(1)) Picture "@E 999,999,999.99"
					Else
						@li,nColunaTotal PSAY Round(NoRound(xMoeda(SE2->E2_VALOR-SE2->E2_SDDECRE+SE2->E2_SDACRES-nAbat+nJuros,SE2->E2_MOEDA,MV_PAR04,Iif(MV_PAR06==1,SEA->EA_DATABOR,dDataBase),MsDecimais(1)+1,SE2->E2_TXMOEDA ,SM2->M2_MOEDA2),MsDecimais(1)+1),MsDecimais(1)) Picture "@E 999,999,999.99"
					EndIf
				EndIf
				If lAbatimento
					nTotValor -= Round(NoRound(xMoeda(SE2->E2_SALDO+nJuros,SE2->E2_MOEDA,MV_PAR04,Iif(MV_PAR06==1,SEA->EA_DATABOR,dDataBase),MsDecimais(1)+1,SE2->E2_TXMOEDA ,SM2->M2_MOEDA2),MsDecimais(1)+1),MsDecimais(1))
				Else
					nTotValor += Round(NoRound(xMoeda(Iif(mv_par07==1,SE2->E2_SALDO,SE2->E2_VALOR)-SE2->E2_SDDECRE+SE2->E2_SDACRES-nAbat+nJuros,SE2->E2_MOEDA,MV_PAR04,Iif(MV_PAR06==1,SEA->EA_DATABOR,dDataBase),MsDecimais(1)+1,SE2->E2_TXMOEDA ,SM2->M2_MOEDA2),MsDecimais(1)+1),MsDecimais(1))
				Endif

				dbSelectArea( "SEA" )
				SEA->(dbSkip( ))

				//+----------------------------------------------------------+
				//| Verifica se n„o h  mais registros v lidos a analisar.    |
				//+----------------------------------------------------------+
				DO WHILE SEA->(!Eof() .And. cFilial == EA_FILIAL .And. EA_NUMBOR <= mv_par02 ;
				.and. (Empty(EA_NUMBOR) .or. SEA->EA_CART != "P"))
					SEA->(dbSkip( ))
				ENDDO

				If cNumBor != SEA->EA_NUMBOR
					lNew := .T. 							// Novo bordero a ser impresso
					If li != 80
						li+=2
						@li,	00 PSAY __PrtThinLine()
						li++
						@li, 75 PSAY OemToAnsi("TOTAL GERAL ..... ")  //"TOTAL GERAL ..... "
						@li,nColunaTotal PSAY nTotValor	Picture "@E 999,999,999.99"
						cExtenso := Extenso( nTotValor, .F., MV_PAR04 )
						li+=2
						@li,	1 PSAY Trim(SubStr(cExtenso,1,100))
						If Len(Trim(cExtenso)) > 100
							li++
							@li, 0 PSAY SubStr(cExtenso,101,Len(Trim(cExtenso))-100)
						Endif
						li+=2
						If cModelo $ "CH/02"
							@li, 0 PSAY OemToAnsi("AUTORIZAMOS V.SAS. A EMITIR OS CHEQUES NOMINATIVOS AOS BENEFICIARIOS EM REFERENCIA,")  //"AUTORIZAMOS V.SAS. A EMITIR OS CHEQUES NOMINATIVOS AOS BENEFICIARIOS EM REFERENCIA,"
							li++
							@li, 0 PSAY OemToAnsi("DEBITANDO EM NOSSA CONTA CORRENTE NO DIA ") + DtoC( mv_par03 )  //"DEBITANDO EM NOSSA CONTA CORRENTE NO DIA "
							li++
							@li, 0 PSAY OemToAnsi("PELO VALOR ACIMA TOTALIZADO.")  //"PELO VALOR ACIMA TOTALIZADO."
						Elseif cModelo $ "CT/30"
							@li, 0 PSAY OemToAnsi("AUTORIZAMOS V.SAS. A PAGAR OS TITULOS ACIMA RELACIONADOS EM NOSSA")  //"AUTORIZAMOS V.SAS. A PAGAR OS TITULOS ACIMA RELACIONADOS EM NOSSA"
							li++
							@li, 0 PSAY OemToAnsi("CONTA MOVIMENTO NO DIA ")   + DtoC( mv_par03 ) + OemToAnsi(", PELO VALOR ACIMA TOTALIZADO.")  //"CONTA MOVIMENTO NO DIA "###", PELO VALOR ACIMA TOTALIZADO."
						Elseif cModelo $ "CP/31"
							@li, 0 PSAY OemToAnsi("AUTORIZAMOS V.SAS. A PAGAR OS TITULOS EM REFERENCIA, LEVANDO A DEBITO DE NOSSA")  //"AUTORIZAMOS V.SAS. A PAGAR OS TITULOS EM REFERENCIA, LEVANDO A DEBITO DE NOSSA"
							li++
							@li, 0 PSAY OemToAnsi("CONTA CORRENTE NUM. ") + cNumConta + OemToAnsi("CONTA CORRENTE NUM. ")+ DtoC( mv_par03 ) +OemToAnsi(" PELO VALOR ACIMA TOTALIZADO.")  //"CONTA CORRENTE NUM. "###" NO DIA "###" PELO VALOR ACIMA TOTALIZADO."
						Elseif cModelo $ "CC/01/03/04/05/10/41/43"
							@li, 0 PSAY OemToAnsi("AUTORIZAMOS V.SAS. A EMITIREM ORDEM DE PAGAMENTO, OU DOC PARA OS BANCOS/CONTAS ACIMA.")  //"AUTORIZAMOS V.SAS. A EMITIREM ORDEM DE PAGAMENTO, OU DOC PARA OS BANCOS/CONTAS ACIMA."
							li++
							@li, 0 PSAY OemToAnsi("DOS TITULOS RESPECTIVOS DEBITANDO EM NOSSA C/CORRENTE NUM ")   + cNumConta  //"DOS TITULOS RESPECTIVOS DEBITANDO EM NOSSA C/CORRENTE NUM "
							li++
							@li, 0 PSAY OemToAnsi("NO DIA ") + dToC( mv_par03 ) +OemToAnsi(" PELO VALOR ACIMA TOTALIZADO.")  //"NO DIA "### " PELO VALOR ACIMA TOTALIZADO."
						Else
							@li, 0 PSAY OemToAnsi("AUTORIZAMOS V.SAS. A PAGAR OS TITULOS EM REFERENCIA, LEVANDO A DEBITO DE NOSSA")  //"AUTORIZAMOS V.SAS. A PAGAR OS TITULOS EM REFERENCIA, LEVANDO A DEBITO DE NOSSA"
							li++
							@li, 0 PSAY OemToAnsi("Este programa tem a função de emitir os borderos de pagamen-") + cNumConta + OemToAnsi(" NO DIA ") + DtoC( mv_par03 ) +OemToAnsi(" PELO VALOR ACIMA TOTALIZADO.")  //"CONTA CORRENTE NUM. "###" NO DIA "###" PELO VALOR ACIMA TOTALIZADO."
						Endif
						li+=3
						@li,60 PSAY "----------------------------"
						li++
						@li,60 PSAY SM0->M0_NOMECOM
						li++
						@li, 0 PSAY " "
						nTotValor := 0
					Endif
				EndIf
				dbSelectArea("SEA")
			Enddo

		Endif
		If Empty(xFilial("SEA")) .AND. aSM0[nInc][1] == cEmpAnt
			Exit
		Endif
		AAdd( aFilProc, c_Empant+xFilial("SEA"))
	Next

	cFilAnt := cFilAux

	Set Device To Screen
	dbSelectArea("SE5")
	SE5->(dbSetOrder( 1 ))
	dbSelectArea("SE2")
	SE5->(dbSetOrder(1))
	Set Filter To
	If aReturn[5] = 1
		Set Printer To
		dbCommit( )
		Ourspool(wnrel)
	Endif
	MS_FLUSH()

Return


/*/================================================================================================================================/*/
/*/{Protheus.doc} fr710cabec
Cabeçalho do borderô.

@type function
@author Wagner Xavier
@since 24/05/1993
@version P12.1.23

@param cModelo, Caractere, Modelo do documento.
@param nTipo, Numérico, Compatibilidade.
@param Tamanho, Numérico, Compatibilidade.
@param lFirst, Lógico, Indica se é o primeiro.

@obs Desenvolvimento FIEG

@history 28/03/2019, elton.alves@TOTVS.com.br, Compatibilização para o Protheus 12.1.23.

/*/
/*/================================================================================================================================/*/

Static Function fr710cabec( cModelo, nTipo, Tamanho, lFirst)
	Local cCabecalho
	Local cTexto

	//--< Log das Personalizações >-----------------------------
	U_LogCustom()

	//--< Processamento da Rotina >-----------------------------

	If cModelo $ "CH/02" // Tabela("58",cModelo)
		cTexto := Tabela("58",@cModelo)
		cCabecalho := OemToAnsi("PRF NUMERO PC B E N E F I C I A R I O                  BANCO           DT.VENC  HISTORICO               VALOR A PAGAR")  //"PRF NUMERO PC B E N E F I C I A R I O                  BANCO           DT.VENC  HISTORICO               VALOR A PAGAR"
	Elseif cModelo $ "CT/30"
		cTexto := Tabela("58",@cModelo)
		cCabecalho := OemToAnsi("PRF NUMERO PC B E N E F I C I A R I O                   DT.VENC BCO AGENCIA NUM CHEQUE         VALOR A PAGAR")  //"PRF NUMERO PC B E N E F I C I A R I O                   DT.VENC BCO AGENCIA NUM CHEQUE         VALOR A PAGAR"
	Elseif cModelo $ "CP/31"
		cTexto := Tabela("58",@cModelo)
		cCabecalho := OemToAnsi("PRF NUMERO PC B E N E F I C I A R I O                  BANCO           DT.VENC  NUM.CHEQUE        VALOR  A PAGAR")  //"PRF NUMERO PC B E N E F I C I A R I O                  BANCO           DT.VENC  NUM.CHEQUE        VALOR  A PAGAR"
	ElseIf cModelo $ "CC/01/03/04/05/10/41/43"
		cTexto := Tabela("58",@cModelo)
		cCabecalho := OemToAnsi("PRF NUMERO       PC B A N C O       BCO AGENC NUMERO CONTA  BENEFICIARIO              CNPJ/CPF        DT.VENC       VALOR A PAGAR")  //"PRF NUMERO       PC B A N C O       BCO AGENC NUMERO CONTA  BENEFICIARIO              CNPJ/CPF        DT.VENC       VALOR A PAGAR"
	Else
		cTexto := Tabela("58",@cModelo)
		cCabecalho := OemToAnsi("PRF NUMERO PC B E N E F I C I A R I O                  BANCO           DT.VENC  NUM.CHEQUE        VALOR  A PAGAR")  //"PRF NUMERO PC B E N E F I C I A R I O                  BANCO           DT.VENC  NUM.CHEQUE        VALOR  A PAGAR"
	Endif

	dbSelectArea( "SA6" )
	SA6->(dbSeek( cFilial+SEA->EA_PORTADO+SEA->EA_AGEDEP+SEA->EA_NUMCON ))
	aCabec := {Sm0->M0_nome,;
	PadC(OemToAnsi(""),97),;
	OemToAnsi("DATA: ")+DtoC(dDataBase),;
	PadC(cTexto,97),;
	OemToAnsi("BORDERO: ")+SEA->EA_NUMBOR,;
	Pad(OemToAnsi("BANCO: ") + SA6->A6_NOME,130),;
	Pad(OemToAnsi("AGENCIA: ") + RTrim(SA6->A6_AGENCIA) + Iif( !Empty(SA6->A6_DVAGE),"-","") + SA6->A6_DVAGE +;
	OemToAnsi(" - C/C ") + RTrim(SA6->A6_NUMCON) + Iif( !Empty(SA6->A6_DVCTA),"-","") + SA6->A6_DVCTA, 130),; //" - C/C "
	Pad(SA6->A6_END + " "  + SA6->A6_MUN + " " + SA6->A6_EST,130)}

	Cabec1 := cCabecalho
	li := Cabec710(Titulo,Cabec1,NomeProg,tamanho,Iif(aReturn[4]==1,GetMv("MV_COMP"),;
	GetMv("MV_NORM")), aCabec, @lFirst)

Return

/*/================================================================================================================================/*/
/*/{Protheus.doc} fa710DtDeb
Validacao da data de débito para o borderô.

@type function
@author Mauricio Pequim Jr.
@since 12/01/1998
@version P12.1.23

@obs Desenvolvimento FIEG

@history 28/03/2019, elton.alves@TOTVS.com.br, Compatibilização para o Protheus 12.1.23.

@return Lógico, Verdadeiro ou Falso para validacao da data de débito para o borderô.

/*/
/*/================================================================================================================================/*/

User Function fa710DtDeb()

	Local lRet := .T.

	//--< Log das Personalizações >-----------------------------
	U_LogCustom()

	//--< Processamento da Rotina >-----------------------------

	lRet := IIf (mv_par03 < dDataBase, .F. , .T. )

Return lRet

/*/================================================================================================================================/*/
/*/{Protheus.doc} cabec710
Validação da data de débito para o bordero.

@type function
@author Mauricio Pequim Jr.
@since 14/07/2001
@version P12.1.23

@param cTitulo, Caracetere, Compatibilidade.
@param cCabec1, Caracetere, Cabeçalho do relatório.
@param cNomPrg, Caracetere, Nome do Programa.
@param nTamanho, Numérico, Compatibilidade.
@param nChar, Numérico, Caracteres para setar a impressora.
@param aCustomText, Array, Compatibilidade.
@param lFirst, Lógico, Indica se é o primeiro.

@obs Desenvolvimento FIEG

@history 28/03/2019, elton.alves@TOTVS.com.br, Compatibilização para o Protheus 12.1.23.

@return Numérico, Linha Posicionada.

/*/
/*/================================================================================================================================/*/

User FUNCTION cabec710(cTitulo,cCabec1,cNomPrg,nTamanho,nChar,aCustomText,lFirst)

	Local cAlias,nLargura,nLin:=0, aDriver := ReadDriver(),nCont:= 0, cVar,uVar,cPicture
	Local lWin := .f.
	Local nRow, nCol

	//--< Log das Personalizações >-----------------------------
	U_LogCustom()

	//--< Processamento da Rotina >-----------------------------

	// Parâmetro que se passado suprime o texto padrao desta função por outro customizado
	Default aCustomText := Nil

	#DEFINE INIFIELD    Chr(27)+Chr(02)+Chr(01)
	#DEFINE FIMFIELD    Chr(27)+Chr(02)+Chr(02)
	#DEFINE INIPARAM    Chr(27)+Chr(04)+Chr(01)
	#DEFINE FIMPARAM    Chr(27)+Chr(04)+Chr(02)

	lPerg := If(GetMv("MV_IMPSX1") == "S" ,.T.,.F.)

	cNomPrg := Alltrim(cNomPrg)

	Private cSuf:=""

	DEFAULT lFirst := .t.

	If TYPE("__DRIVER") == "C"
		If "DEFAULT"$__DRIVER
			lWin := .t.
		EndIf
	EndIf

	nLargura:=132

	IF aReturn[5] == 1  // imprime em disco
		lWin := .f.    	// Se eh disco , nao eh windows
	Endif

	If lFirst
		nRow := PRow()
		nCol := PCol()
		SetPrc(0,0)
		If aReturn[5] <> 2 // Se nao for via Windows manda os caracteres para setar a impressora
			If nChar == NIL .and. !lWin .and. __cInternet == Nil
				@ 0,0 PSAY &(If(aReturn[4]=1,aDriver[3],aDriver[4]))
			ElseIf !lWin .and. __cInternet == Nil
				If nChar == 15
					@ 0,0 PSAY &(If(aReturn[4]=1,aDriver[3],aDriver[4]))
				Else
					@ 0,0 PSAY &(aDriver[4])
				EndIf
			EndIf
		EndIF
		If GetMV("MV_CANSALT",,.T.) // Saltar uma página na impressão
			If GetMv("MV_SALTPAG",,"S") != "N"
				Setprc(nRow,nCol)
			EndIf
		Endif
	Endif

	// Impressão da lista de parametros quando solicitada
	//Cabecalho.
	FinCgcCabec(Titulo, Cabec1, cabec2, nomeprog, nChar, mv_par03, aCustomText)

	@ 05,00 PSAY __PrtLeft(aCustomText[1])		// Empresa
	@ 05,00 PSAY __PrtCenter(aCustomText[2])	// Titulo do relatorio
	@ 05,00 PSAY __PrtRight(aCustomText[3])		// Data EmissÆo
	@ 06,00 PSAY __PrtCenter(aCustomText[4])	// Descri‡Æo do tipo de bordero
	@ 06,00 PSAY __PrtRight(aCustomText[5])		// Nro do bordero
	@ 09,00 PSAY __PrtLeft(aCustomText[6])		// Ao Banco
	@ 10,00 PSAY __PrtLeft(aCustomText[7])		// Agencia - Conta Corrente
	@ 11,00 PSAY __PrtLeft(aCustomText[8])		// Endereco Banco

	If LEN(Trim(cCabec1)) != 0
		@ 12,00  PSAY __PrtThinLine()
		@ 13,00  PSAY cCabec1
		@ 14,00  PSAY __PrtThinLine()
	EndIf
	nLin :=15
	m_pag++
	lFirst := .f.
	If Subs(__cLogSiga,4,1) == "S"
		__LogPages()
	EndIf

Return nLin

/*/================================================================================================================================/*/
/*/{Protheus.doc} FinCgcCabec
Monta Cabecalho do relatorio.

@type function
@author Adilson H Yamaguchi
@since 13/12/2001
@version P12.1.23

@param Titulo, Caractere, Titulo.
@param Cabec1, Caractere, Conteudo da cabec1.
@param cabec2, Caractere, Conteudo da cabec2.
@param nomeprog, Numérico, Nome da Rotina.
@param nTam, Numérico, Tamanho.
@param dDataRef, Data, Data de Referencia.
@param aCustomText, Array, Compatibilidade.
@param lFirst, Lógico, Indica se é o primeiro.

@obs Desenvolvimento FIEG

@history 28/03/2019, elton.alves@TOTVS.com.br, Compatibilização para o Protheus 12.1.23.

@return Lógico, Fixo Verdadeiro.

/*/
/*/================================================================================================================================/*/

Static Function FinCgcCabec(Titulo, Cabec1, cabec2, nomeprog, nTam, dDataRef, aCustomText, lFirst)
	Local Tamanho := "M"
	Local aCabec

	//--< Log das Personalizações >-----------------------------
	U_LogCustom()

	//--< Processamento da Rotina >-----------------------------

	nTam 	 := 130
	dDataRef := If(dDataRef = Nil, mv_par01, dDataBase)

	aCabec :=	{"","__LOGOEMP__"}

	cabec(Titulo,"","","",tamanho,	nTam, aCabec)

Return .T.

/*/================================================================================================================================/*/
/*/{Protheus.doc} DFR710CHK
Verifica quais titulos tem amarracao com o bordero e faz as devidas validacoes.

@type function
@author Pedro Pereira Lima
@since 14/06/2010
@version P12.1.23

@param nValid, numeric, descricao
@param cAliasQuery, characters, descricao

@obs Desenvolvimento FIEG

@history 28/03/2019, elton.alves@TOTVS.com.br, Compatibilização para o Protheus 12.1.23.

@return Lógico, Indica os titulos que tem amarracao com o bordero.

/*/
/*/================================================================================================================================/*/

User Function DFR710CHK(nValid,cAliasQuery)
	Local aArea    := GetArea()
	Local aAreaQry := (cAliasQuery)->(GetArea())
	Local lRetorno := .T.

	//--< Log das Personalizações >-----------------------------
	U_LogCustom()

	//--< Processamento da Rotina >-----------------------------

	If !Empty((cAliasQuery)->EA_FILORIG)//Se possui EA_FILORIG, utilizo esse campo na chave de busca

		dbSelectArea("SE2")
		SE2->(dbSetOrder(1))
		SE2->(dbSeek((cAliasQuery)->(EA_FILORIG+EA_PREFIXO+EA_NUM+EA_PARCELA+EA_TIPO+EA_FORNECE+EA_LOJA)))

		While !SE2->(Eof()) .And. (cAliasQuery)->(EA_FILORIG+EA_PREFIXO+EA_NUM+EA_PARCELA+EA_TIPO+EA_FORNECE+EA_LOJA) ==;
		SE2->(E2_FILIAL+E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)
			If nValid == 1 //oSection1
				lRetorno :=	(MV_PAR05 == 1 .Or. SE2->E2_NUMBOR == (cAliasQuery)->EA_NUMBOR)
			Else //oSection2
				lRetorno :=	(MV_PAR05 == 1 .Or. SE2->E2_MOEDA == MV_PAR04)
			EndIf
			SE2->(dbSkip())
		EndDo
	Else//Validação anterior, caso o EA_FILORIG esteja em branco
		dbSelectArea("SE2")
		SE2->(dbSetOrder(1))
		SE2->(dbSeek(xFilial("SE2")+(cAliasQuery)->(EA_PREFIXO+EA_NUM+EA_PARCELA+EA_TIPO+EA_FORNECE+EA_LOJA)))

		While !SE2->(Eof()) .And. xFilial("SE2")+(cAliasQuery)->(EA_PREFIXO+EA_NUM+EA_PARCELA+EA_TIPO+EA_FORNECE+EA_LOJA) ==;
		SE2->(E2_FILIAL+E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)
			If nValid == 1 //oSection1
				lRetorno :=	(MV_PAR05 == 1 .Or. SE2->E2_NUMBOR == (cAliasQuery)->EA_NUMBOR)
			Else //oSection2
				lRetorno :=	(MV_PAR05 == 1 .Or. SE2->E2_MOEDA == MV_PAR04)
			EndIf

			SE2->(dbSkip())

		EndDo
	EndIf

	RestArea(aAreaQry)
	RestArea(aArea)

Return lRetorno

/*/================================================================================================================================/*/
/*/{Protheus.doc} AjustaSX1
Atualizar dicionario de perguntas do relatorio de Bordero de Pagamentos.

@type function
@author Gustavo Henrique
@since 25/05/2012
@version P12.1.23

@obs Desenvolvimento FIEG

@history 28/03/2019, elton.alves@TOTVS.com.br, Compatibilização para o Protheus 12.1.23.

@deprecated Função PuSx1 foi descontinuada.
/*/
/*/================================================================================================================================/*/

Static Function AjustaSX1()
	Local aHelpPor	:= {}
	Local aHelpEng	:= {}
	Local aHelpSpa	:= {}
	Local aArea 	:= GetArea()
	//Local nTamFilial 	:= IIf( lFWCodFil, FWGETTAMFILIAL, TamSx3( "SEA_FILIAL" )[1] )

	//--< Log das Personalizações >-----------------------------
	U_LogCustom()

	//--< Processamento da Rotina >-----------------------------

	Aadd( aHelpPor, "Selecione a forma de composicao do saldo"  )
	Aadd( aHelpPor, "dos títulos, que pode ser por saldo "      )
	AAdd( aHelpPor, "atual ou valor original dos títulos. "     )

	Aadd( aHelpSpa, "Seleccione la forma de composición del  "  )
	Aadd( aHelpSpa, "saldo de los títulos, los cuales serán  "  )
	Aadd( aHelpSpa, "por el saldo actual o valor original    "  )
	Aadd( aHelpSpa, "de los títulos."                           )

	Aadd( aHelpEng, "Choose the form of balance composition."  )
	Aadd( aHelpEng, "Current balance or original value of   "  )
	Aadd( aHelpEng, "bills. "                                  )

	PutSx1( "FIN710", "07","Compoem Saldo por ?","+Componen Saldo por ?","Set Balance by ?","mv_ch7","N",1,0,1,"C","","","","",;
	"mv_par07","Saldo Atual","Saldo Actual","Current Balance","","Valor Original","Valor Original","Original Value","","","","","","","","","",;
	aHelpPor,aHelpEng,aHelpSpa)

	aHelpPor	:= {}
	aHelpSpa	:= {}
	aHelpEng	:= {}

	// Portugues
	Aadd(aHelpPor,"Selecione a opção 'Sim' para que a " )
	Aadd(aHelpPor,"geração do relatório considere as " )
	Aadd(aHelpPor,"filiais a serem informadas nos campos " )
	Aadd(aHelpPor,"a seguir, ou 'Não' caso deseja imprimir " )
	Aadd(aHelpPor,"apenas os dados da filial atual." )
	// Espanhol
	Aadd(aHelpSpa,"Elija la opcion 'Si' para que la " )
	Aadd(aHelpSpa,"generacion del informe considere las " )
	Aadd(aHelpSpa,"sucursales que se deben informar en los " )
	Aadd(aHelpSpa,"campos a seguir, o 'No' si desea imprimir " )
	Aadd(aHelpSpa,"apenas los datos de la cucursal actual." )
	// Ingles
	Aadd(aHelpEng,"Select the option 'Yes' so that the reports " )
	Aadd(aHelpEng,"generation can consider the branches to be " )
	Aadd(aHelpEng,"entered in the following fields. If you want " )
	Aadd(aHelpEng,"to print just the data about the current " )
	Aadd(aHelpEng,"branch, select 'No'." )


	//	PutSx1( "FIN710", "08","Considera Filiais ?","+Considera Afiliado ?","Considers Affiliate ?","mv_ch8","N",1,0,1,"C","","","","",;
	//	"mv_par08","Sim","Si","Yes","","Nao","No","No","","","","","","","","","",;
	//	aHelpPor,aHelpEng,aHelpSpa)


	aHelpPor	:= {}
	aHelpSpa	:= {}
	aHelpEng	:= {}

	// Portugues
	Aadd(aHelpPor,"Caso a resposta do parâmetro anterior " )
	Aadd(aHelpPor,"'Considera Filiais?' seja igual  a 'Sim'," )
	Aadd(aHelpPor,"Informe o código inicial do intervalo de " )
	Aadd(aHelpPor,"n+meros de filiais da sua empresa, a serem " )
	Aadd(aHelpPor,"considerados na geração do relatório." )

	// Espanhol
	Aadd(aHelpSpa,"Si la respuesta del parametro anterior " )
	Aadd(aHelpSpa,"'+Considera Sucursales?' es igual a 'Si'," )
	Aadd(aHelpSpa,"digite el codigo inicial del intervalo de " )
	Aadd(aHelpSpa,"numeros de sucursales de su empresa que se " )
	Aadd(aHelpSpa,"debe considerar en la generacion del informe." )

	// Ingles
	Aadd(aHelpEng,"In case the answer given to the previous " )
	Aadd(aHelpEng,"parameter ('Cons. Branches Below?') is 'Yes'," )
	Aadd(aHelpEng,"enter in this field the initial code of your " )
	Aadd(aHelpEng,"company´s branches number interval to be " )
	Aadd(aHelpEng,"considered when generating the report." )


	//	PutSx1( "FIN710","09"," Da Filial ","De Sucursal","From Branch",;
	//	"mv_ch9","C",nTamFilial,0,0,"G","","SM0","033","","mv_par09","","","","","","","",;
	//	"","","","","","",	aHelpPor,aHelpEng,aHelpSpa)


	aHelpPor	:= {}
	aHelpSpa	:= {}
	aHelpEng	:= {}

	// Portugues
	Aadd(aHelpPor,"Caso a resposta do parâmetro anterior " )
	Aadd(aHelpPor,"'Considera Filiais?' seja igual  a 'Sim'," )
	Aadd(aHelpPor,"Informe o código final do intervalo de " )
	Aadd(aHelpPor,"n+meros de filiais da sua empresa, a serem " )
	Aadd(aHelpPor,"considerados na geração do relatório." )

	// Espanhol
	Aadd(aHelpSpa,"Si la respuesta del parametro anterior " )
	Aadd(aHelpSpa,"'+Considera Sucursales?' es igual a 'Si'," )


	Aadd(aHelpSpa,"digite el codigo final del intervalo de " )
	Aadd(aHelpSpa,"numeros de sucursales de su empresa que se " )
	Aadd(aHelpSpa,"debe considerar en la generacion del informe." )

	// Ingles
	Aadd(aHelpEng,"In case the answer given to the previous " )
	Aadd(aHelpEng,"parameter ('Cons. Branches Below?') is 'Yes'," )
	Aadd(aHelpEng,"enter in this field the final code of your " )
	Aadd(aHelpEng,"company´s branches number interval to be " )
	Aadd(aHelpEng,"considered when generating the report." )


	//	PutSx1( "FIN710","10","Ate a Filial","A Sucursal","To Branch",;
	//	"mv_ch10","C",nTamFilial,0,0,"G","","SM0","033","","mv_par10","","","","zz","","","",;
	//	"","","","","","","","","")

	aHelpPor	:= {}
	aHelpSpa	:= {}
	aHelpEng	:= {}

	Aadd(aHelpPor,"Selecione em qual moeda deve ser emitido " )
	Aadd(aHelpPor,"o relatório." )
	Aadd(aHelpSpa,"Elija la moneda en la cual se debe emitir " )
	Aadd(aHelpSpa,"el informe." )
	Aadd(aHelpEng,"Select the currency in which the report " )
	Aadd(aHelpEng,"will be issued." )

	PutHelp("P.FIN15015.", aHelpPor,aHelpEng, aHelpSpa, .T.)


	RestArea(aArea)

Return

/*/================================================================================================================================/*/
/*/{Protheus.doc} MsModoFil
Retornar o modo de compartilhamento de cada tabela.

@type function
@author Jose Lucas
@since 17/06/2011
@version P12.1.23

@param cAlias, Caractere, Alias da tabela.

@obs Desenvolvimento FIEG

@history 28/03/2019, elton.alves@TOTVS.com.br, Compatibilização para o Protheus 12.1.23.

@return Array, Array com o modo de compartilhamento da tabela .

/*/
/*/================================================================================================================================/*/

Static Function MsModoFil(cAlias)
	Local aSavArea := GetArea()
	Local aModo := {"","",""}

	//--< Log das Personalizações >-----------------------------
	U_LogCustom()

	//--< Processamento da Rotina >-----------------------------

	SX2->(dbSetOrder(1))
	If SX2->(dbSeek(cAlias))
		aModo[1] := SX2->X2_MODO
		aModo[2] := SX2->X2_MODOUN
		aModo[3] := SX2->X2_MODOEMP
	EndIf
	RestArea(aSavArea)
Return aModo

/*/================================================================================================================================/*/
/*/{Protheus.doc} DFiR710V
Funcao para controle de versao.

@type function
@author Thiago Rasmussen
@since 02/09/2014
@version P12.1.23

@obs Desenvolvimento FIEG

@history 28/03/2019, elton.alves@TOTVS.com.br, Compatibilização para o Protheus 12.1.23.

@return Caractere, Versao Atual.

/*/
/*/================================================================================================================================/*/

User Function DFiR710V()

	Local cRet  := ""

	//--< Log das Personalizações >-----------------------------
	U_LogCustom()

	//--< Processamento da Rotina >-----------------------------

	cRet := "20140902001"

Return (cRet)

